{"version":3,"file":"static/js/862.e0671762.chunk.js","mappings":"kUAaMA,EAA0B,WAC9BC,SAASC,iBAAiB,cAAc,WAAQ,GAClD,EACMC,EAA0B,WAC9B,IAAMC,EAAMH,SACRI,GAAO,EACXD,EAAIF,iBAAiB,cAAc,WACjC,IAAIG,EAAJ,CAGA,IAAIC,EAAQ,EACRC,EAAW,GACTC,EAAK,IAAIC,YAAY,gBAAiB,CAC1CC,SAAS,EACTC,OAAQ,CACNC,SAAQ,SAACC,EAAUC,GACjBP,EAASQ,KAAK,CAAEF,SAAAA,EAAUC,QAAAA,EAASE,GAAIV,KACzC,KAGJF,EAAIa,cAAcT,GAClB,IAAMU,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAe,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,IAEhB,OAApBJ,QAAgD,IAApBA,OAA6B,EAASA,EAAgBV,SAAO,CAAAa,EAAAE,KAAA,QACpC,GACzC,OADRJ,EAASD,EAAgBV,QAAQgB,IACrB,CAAAH,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACVJ,EAAM,OAAAE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAKhBK,QAAQC,MAAKN,EAAAI,IAAI,yBAAAJ,EAAAO,OAAA,GAAAX,EAAA,kBAEpB,gBAZkBY,GAAA,OAAAhB,EAAAiB,MAAA,KAAAC,UAAA,KAabP,EAAkB,WACtB,GAAIvB,EAAS+B,OAAS,EAAG,CACvB,IAAIC,EAAkB,CACpB1B,SAAU2B,OAAOC,iBACjB3B,QAAS,WAAe,EACxBE,IAAK,GAEPT,EAASmC,SAAQ,SAAC5B,GACZA,EAAQD,UAAY0B,EAAgB1B,WACtC0B,EAAkBzB,EAEtB,IACAT,GAAO,EACPE,EAAWA,EAASoC,QAAO,SAAC7B,GAAO,OAAKA,EAAQE,KAAOuB,EAAgBvB,EAAE,IACzEE,EAAcqB,GAAiBK,MAAK,kBAAOvC,GAAO,CAAK,GACzD,CACF,EACAyB,GA1CA,CA2CF,GACF,EACMe,EAA+B,IAC/BC,EAA4B,E","sources":["../node_modules/@ionic/core/components/hardware-back-button.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * When hardwareBackButton: false in config,\n * we need to make sure we also block the default\n * webview behavior. If we don't then it will be\n * possible for users to navigate backward while\n * an overlay is still open. Additionally, it will\n * give the appearance that the hardwareBackButton\n * config is not working as the page transition\n * will still happen.\n */\nconst blockHardwareBackButton = () => {\n  document.addEventListener('backbutton', () => { }); // eslint-disable-line\n};\nconst startHardwareBackButton = () => {\n  const doc = document;\n  let busy = false;\n  doc.addEventListener('backbutton', () => {\n    if (busy) {\n      return;\n    }\n    let index = 0;\n    let handlers = [];\n    const ev = new CustomEvent('ionBackButton', {\n      bubbles: false,\n      detail: {\n        register(priority, handler) {\n          handlers.push({ priority, handler, id: index++ });\n        },\n      },\n    });\n    doc.dispatchEvent(ev);\n    const executeAction = async (handlerRegister) => {\n      try {\n        if (handlerRegister === null || handlerRegister === void 0 ? void 0 : handlerRegister.handler) {\n          const result = handlerRegister.handler(processHandlers);\n          if (result != null) {\n            await result;\n          }\n        }\n      }\n      catch (e) {\n        console.error(e);\n      }\n    };\n    const processHandlers = () => {\n      if (handlers.length > 0) {\n        let selectedHandler = {\n          priority: Number.MIN_SAFE_INTEGER,\n          handler: () => undefined,\n          id: -1,\n        };\n        handlers.forEach((handler) => {\n          if (handler.priority >= selectedHandler.priority) {\n            selectedHandler = handler;\n          }\n        });\n        busy = true;\n        handlers = handlers.filter((handler) => handler.id !== selectedHandler.id);\n        executeAction(selectedHandler).then(() => (busy = false));\n      }\n    };\n    processHandlers();\n  });\n};\nconst OVERLAY_BACK_BUTTON_PRIORITY = 100;\nconst MENU_BACK_BUTTON_PRIORITY = 99; // 1 less than overlay priority since menu is displayed behind overlays\n\nexport { MENU_BACK_BUTTON_PRIORITY, OVERLAY_BACK_BUTTON_PRIORITY, blockHardwareBackButton, startHardwareBackButton };\n"],"names":["blockHardwareBackButton","document","addEventListener","startHardwareBackButton","doc","busy","index","handlers","ev","CustomEvent","bubbles","detail","register","priority","handler","push","id","dispatchEvent","executeAction","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","handlerRegister","result","wrap","_context","prev","next","processHandlers","t0","console","error","stop","_x","apply","arguments","length","selectedHandler","Number","MIN_SAFE_INTEGER","forEach","filter","then","OVERLAY_BACK_BUTTON_PRIORITY","MENU_BACK_BUTTON_PRIORITY"],"sourceRoot":""}